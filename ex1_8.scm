(define (cube-root-iter guess x)
  (if (good-enough? guess x)
     guess
     (cube-root-iter (improve guess x)
		     x)))
(define (improve guess x)
  (/ (+ (/ x (* guess guess))
	(* 2 guess))
     3))
(define (good-enough? guess x)
  (and (< (/ guess (improve guess x)) 1.001)
       (> (/ guess (improve guess x)) 0.999)))
(define (cube-root x)
  (cube-root-iter 1.0 x))
(cube-root 27)